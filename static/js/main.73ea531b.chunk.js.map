{"version":3,"sources":["placeholderDefaults.js","components/organism/RadioButtons.jsx","components/organism/TextInputField.jsx","components/organism/CheckBoxAndLikesField.jsx","components/organism/HashTagInputField.jsx","components/organism/HousePinRadio.jsx","components/organism/LocationInputField.jsx","components/organism/DurationInputField.jsx","components/organism/ButtonViewGroup.jsx","components/organism/ChannelInputField.jsx","components/Footer.jsx","components/JodelView.jsx","components/MainWrapper.jsx","App.js","serviceWorker.js","index.js"],"names":["defaultQuotes","defaultLocations","defaultChannels","defaultColors","defaultHashtags","LightOrangeRadio","withStyles","root","color","lightOrange","checked","props","Radio","SelectiveYellowRadio","selectiveYellow","LightRedRadio","lightRed","BlueGreenRadio","blueGreen","PacificBlueRadio","pacificBlue","LightGreenRadio","lightGreen","RadioButtons","backgroundColor","onChange","handleChange","value","size","useStyles","makeStyles","theme","margin","spacing","width","TextInputField","classes","className","noValidate","autoComplete","TextField","style","minWidth","id","label","multiline","rows","onFocus","event","some","quote","target","textInput","InputLabelProps","shrink","variant","styles","display","flexDirection","CheckBoxAndLikesField","displayLikes","showLikes","FormControlLabel","control","Switch","inputProps","FormControl","visibility","paddingLeft","InputLabel","htmlFor","OutlinedInput","likes","type","endAdornment","InputAdornment","position","Math","abs","labelWidth","randomPlaceHolderHashtag","floor","random","length","HashTagInputField","placeholder","hashTags","text","split","map","word","startsWith","join","HousePinRadio","component","FormLabel","RadioGroup","aria-label","name","housePinIcon","randomLocationPlaceholder","LocationInputField","location","formControl","selectEmpty","marginTop","alphabet","String","fromCharCode","Array","_","i","defaultDurationLabel","DurationInputField","duration","InputProps","max","min","Select","native","key","char","toUpperCase","alignItems","ButtonViewGroup","handleClick","view","ButtonGroup","Button","onClick","ChannelInputField","channel","modal","justifyContent","paper","palette","background","border","boxShadow","shadows","padding","tos","privacy","Footer","React","useState","tosOpen","setTosOpen","privacyOpen","setPrivacyOpen","cursor","Modal","aria-labelledby","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","rel","href","greyShades","JodelView","options","greyColor","jodelWrapper","height","marginRight","jodelHeader","textAlign","jodelPreview","minHeight","jodelText","whiteSpace","likesText","bottom","right","jodelHashTags","fontWeight","likesNumber","fontSize","topInfo","dot","locationIcon","durationLabel","html2canvas","document","querySelector","then","canvas","link","createElement","download","toDataURL","click","startIcon","randomDefaultColor","Object","keys","randomDefaultText","MainWrapper","message","state","setState","useEffect","detailedView","prop","console","log","App","error","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.73ea531b.chunk.js","sourcesContent":["export const defaultQuotes = [\n    `I don't have a walk-in closet, but I do have a walk-on closet on my floor`,\n    `Fire downtown! 🚒 🔥 \\navoid the roads, it's a total \\nlockdown `,\n    `New ice cream shop on Main St. \\ngiving away free ice cream all \\nweek! 🍦`\n]\n\nexport const defaultLocations =[\n    \"Oslo\",\n    \"Münich\",\n    \"Madrid\",\n    \"Rome\",\n    \"Miami\",\n    \"Cannes\",\n    \"Beijing\",\n    \"Berlin\",\n    \"Paris\",\n    \"São Paulo\",\n    \"Nairobi\",\n    \"Addis Ababa\",\n    \"Moscow\",\n    \"Istanbul\",\n    \"Shanghai\",\n    \"Sapporo\"\n]\n\nexport const defaultChannels = [\n    \"Main\",\n    \"Politics\",\n    \"repost\",\n    \"Questions\",\n    \"Students\",\n    \"food\",\n    \"askwomen\",\n    \"askmen\"\n]\n\nexport const defaultColors = {\n    \"lightOrange\": \"#FF9908\",\n    \"selectiveYellow\": \"#FFBA00\",\n    \"lightRed\": \"#DD5F5F\",\n    \"blueGreen\": \"#8ABDB0\",\n    \"pacificBlue\": \"#06A3CB\",\n    \"lightGreen\": \"#9EC41C\"\n}\n\nexport const defaultHashtags = [\n\"#love\",\n\"#happy\",\n\"#yolo\",\n\"#cute\",\n\"#summer\",\n\"#fun\"\n]","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport { defaultColors } from \"../../placeholderDefaults\";\n\nconst LightOrangeRadio = withStyles({\n  root: {\n    color: defaultColors.lightOrange,\n    '&$checked': {\n      color: defaultColors.lightOrange,\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\nconst SelectiveYellowRadio = withStyles({\n  root: {\n    color: defaultColors.selectiveYellow,\n    '&$checked': {\n      color: defaultColors.selectiveYellow,\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\nconst LightRedRadio = withStyles({\n  root: {\n    color: defaultColors.lightRed,\n    '&$checked': {\n      color: defaultColors.lightRed,\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\nconst BlueGreenRadio = withStyles({\n  root: {\n    color: defaultColors.blueGreen,\n    '&$checked': {\n      color: defaultColors.blueGreen,\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\nconst PacificBlueRadio = withStyles({\n  root: {\n    color: defaultColors.pacificBlue,\n    '&$checked': {\n      color: defaultColors.pacificBlue,\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\nconst LightGreenRadio = withStyles({\n  root: {\n    color: defaultColors.lightGreen,\n    '&$checked': {\n      color: defaultColors.lightGreen,\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\n\n\nexport default function RadioButtons(props) {\n\n  return (\n    <div>\n      <LightOrangeRadio\n        checked={props.backgroundColor === 'lightOrange'}\n        onChange={props.handleChange('backgroundColor')}\n        value=\"lightOrange\"\n        size=\"medium\"\n      />\n      <SelectiveYellowRadio\n        checked={props.backgroundColor === 'selectiveYellow'}\n        onChange={props.handleChange('backgroundColor')}\n        value=\"selectiveYellow\"\n        size=\"medium\"\n      />\n      <LightRedRadio\n        checked={props.backgroundColor === 'lightRed'}\n        onChange={props.handleChange('backgroundColor')}\n        value=\"lightRed\"\n        size=\"medium\"\n      />\n      <BlueGreenRadio\n        checked={props.backgroundColor === 'blueGreen'}\n        onChange={props.handleChange('backgroundColor')}\n        value=\"blueGreen\"\n        size=\"medium\"\n      />\n      <PacificBlueRadio\n        checked={props.backgroundColor === 'pacificBlue'}\n        onChange={props.handleChange('backgroundColor')}\n        value=\"pacificBlue\"\n        size=\"medium\"\n      />\n      <LightGreenRadio\n        checked={props.backgroundColor === 'lightGreen'}\n        onChange={props.handleChange('backgroundColor')}\n        value=\"lightGreen\"\n        size=\"medium\"\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport {defaultQuotes} from '../../placeholderDefaults'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\n\nexport default function TextInputField(props) {\n  const classes = useStyles();\n\nconst removeDefaultValue = (event) => {\n  if (defaultQuotes.some(quote=> quote === event.target.value)){\n    props.handleChange('textInput')({target:{value:''}})\n  }\n}\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField\n        style={{\n          minWidth:'275px'\n        }}\n          id=\"textInput\"\n          label=\"Text\"\n          multiline\n          rows={4}\n          onFocus={removeDefaultValue}\n          value={props.textInput}\n          onChange={props.handleChange('textInput')}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n        />\n      </div>\n    </form>\n  );\n}","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst styles = {\n  display: \"flex\",\n  flexDirection:\"column\"\n};\n\nexport default function CheckBoxAndLikesField(props) {\n  const displayLikes = props.showLikes ? \"visible\" : \"hidden\";\n  return (\n    <div style={styles}>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={props.showLikes}\n            onChange={props.handleChange(\"showLikes\")}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        }\n        label={`Show Likes${props.showLikes ? \"!\" : \"?\"}`}\n      />\n\n      <FormControl\n        style={{\n          visibility: displayLikes,\n          width: \"250px\",\n          paddingLeft:'10px'\n        }}\n        variant=\"outlined\"\n      >\n        <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-amount\"\n          value={props.likes}\n          type=\"number\"\n          onChange={props.handleChange(\"likes\")}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              Like{Math.abs(props.likes) === 1 ? \"\" : \"s\"}\n            </InputAdornment>\n          }\n          labelWidth={60}\n        />\n      </FormControl>\n    </div>\n  );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport {defaultHashtags} from '../../placeholderDefaults'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\nconst randomPlaceHolderHashtag = defaultHashtags[Math.floor(Math.random()*defaultHashtags.length)]\n\nexport default function HashTagInputField(props) {\n  const classes = useStyles();\n  \n\n  const formatAndSetState = event =>{\n    const text = event.target.value\n        .split(' ')\n        .map(word=>{\n            if (!word){\n                return word\n            }\n          if (!word.startsWith('#')){\n              return '#' + word\n          }\n          return word\n        })\n        .join(' ')\n        return props.handleChange('hashTags')({target:{value:text}})\n  }\n\n\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField\n          id=\"hashtagInput\"\n          label=\"Hashtags\"\n          rows={4}\n          placeholder={randomPlaceHolderHashtag}\n          value={props.hashTags}\n          onChange={formatAndSetState}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n        />\n      </div>\n    </form>\n  );\n}","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport RoomIcon from '@material-ui/icons/Room';\nimport HomeIcon from '@material-ui/icons/Home';\n\n\n\nexport default function HousePinRadio(props) {\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\"></FormLabel>\n      <RadioGroup aria-label=\"locationIcon\" name=\"locationIcon1\" value={props.housePinIcon} onChange={props.handleChange('housePinIcon')}>\n        <FormControlLabel value=\"house\" control={<Radio color=\"primary\" />} label={<HomeIcon color=\"action\"/>} />\n        <FormControlLabel value=\"pin\" control={<Radio color=\"primary\" />} label={<RoomIcon color=\"action\"/>} />\n      </RadioGroup>\n    </FormControl>\n  );\n\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport {defaultLocations} from '../../placeholderDefaults'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nconst randomLocationPlaceholder = defaultLocations[Math.floor(Math.random()*defaultLocations.length)]\n\nexport default function LocationInputField(props) {\n  const classes = useStyles();\n\n  \n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"locationInput\"\n        label=\"location\"\n        placeholder={randomLocationPlaceholder}\n        onChange={props.handleChange('location')}\n        value={props.location}\n        InputLabelProps={{\n        shrink: true,\n        }}\n        variant=\"outlined\" />\n    </form>\n  );\n}","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 140,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\nconst alphabet = String.fromCharCode(\n  ...[...Array(26)].map((_, i) => i + 97)\n).split(\"\");\nconst defaultDurationLabel = [\"s\", \"sec\", \"min\", \"m\", \"h\", \"day\", \"days\"];\n\nexport default function DurationInputField(props) {\n  const classes = useStyles();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n      }}\n    >\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <div>\n          <TextField\n            id=\"durationInput\"\n            label=\"Time passed\"\n            type=\"number\"\n            onChange={props.handleChange(\"duration\")}\n            value={props.duration}\n            style={{\n              width: \"120px\",\n            }}\n            InputProps={{\n              inputProps: {\n                max: 60,\n                min: 1,\n              },\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </form>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select\"></InputLabel>\n        <Select\n          onChange={props.handleChange(\"durationLabel\")}\n          native\n          id=\"grouped-native-select\"\n        >\n          <optgroup label=\"Defaults\">\n            {defaultDurationLabel.map((label) => (\n              <option key={label} value={label}>\n                {label}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"All\">\n            {alphabet.map((char, i) => (\n              <option key={`${i}${char}`} value={char}>\n                {char}\n              </option>\n            ))}\n            {alphabet.map((char, i) => (\n              <option key={`${char}${i}`} value={char.toUpperCase()}>\n                {char.toUpperCase()}\n              </option>\n            ))}\n          </optgroup>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function ButtonViewGroup(props) {\n  const classes = useStyles();\n\n const handleClick = (view)=>{\n     props.handleChange('view')({target:{value:view}})\n }\n\n\n  return (\n    <div className={classes.root}>\n      <ButtonGroup  variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n        <Button onClick={()=>handleClick(\"clean\")}>Clean</Button>\n        <Button onClick={()=>handleClick(\"detailed\")}>Detailed</Button>\n      </ButtonGroup>\n    </div>\n  );\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\n\nexport default function ChannelInputField(props) {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"channelInput\"\n        label=\"Channel\"\n        placeholder={'randomLocationPlaceholder'}\n        onChange={props.handleChange('channel')}\n        value={props.channel}\n        InputLabelProps={{\n        shrink: true,\n        }}\n        style={{\n          minWidth:'275px'\n        }}\n        variant=\"outlined\" />\n    </form>\n  );\n}","import React from 'react'\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst tos = (\n    <>\n    <p > By using JodelGenerator, you agree to use our services lawfully and ethically, and in accordance to these rules:</p>\n<ul>\n<li>You do not use generated images in ill intent; such as to harass, attack, slander, threaten, disparage, or otherwise intimidate other people;</li>\n<li>You do not use generated images as any kind of evidence (except for misuse of JodelGenerator);</li>\n<li>You do not use generated images to spread false information;</li>\n<li>You do not present generated images as fact.</li>\n</ul>\n\n<p>By using JodelGenerator, you also agree to be held legally responsible for anything that you generate. JodelGenerator is not liable for the actions of its users, or the content that its users create.</p>\n\n<p> Also note that JodelGenerator is not affiliated in any way to Jodel, Inc.</p>\n\n<p>(Last updated September 30, 2020)</p>\n</>\n)\n\nconst privacy = (\n    <>\n    <p> No data is stored by using JodelGenerator. No captcha utilities or Google analytics (or tools of same nature) are being used </p>\n    <p>(Last updated September 30, 2020)</p>\n    </>\n)\n\n\nexport default function Footer() {\n    const classes = useStyles();\n  const [tosOpen, setTosOpen] = React.useState(false);\n  const [privacyOpen, setPrivacyOpen] = React.useState(false);\n\n  const handleTosOpen = () => {\n    setTosOpen(true);\n  };\n\n  const handleTosClose = () => {\n    setTosOpen(false);\n  };\n\n  const handlePrivacyOpen = () => {\n    setPrivacyOpen(true);\n  };\n\n  const handlePrivacyClose = () => {\n    setPrivacyOpen(false);\n  };\n  return (\n    <div className=\"footer\">\n      <p>By using this service you agree to the <span style={{color: '#0000EE', cursor: 'pointer'}} onClick={handleTosOpen}> Terms of Service </span> and <span style={{color: '#0000EE', cursor: 'pointer'}} onClick={handlePrivacyOpen}>Privacy Policy.</span> </p>\n      <Modal\n        aria-labelledby=\"modalTos\"\n        aria-describedby=\"tos\"\n        className={classes.modal}\n        open={tosOpen}\n        onClose={handleTosClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={tosOpen}>\n          <div className={classes.paper}>\n            <h2 id=\"modalTos\">Terms of Service</h2>\n            {tos}\n          </div>\n        </Fade>\n      </Modal>\n\n      <Modal\n        aria-labelledby=\"modalPrivacy\"\n        aria-describedby=\"privacy\"\n        className={classes.modal}\n        open={privacyOpen}\n        onClose={handlePrivacyClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={privacyOpen}>\n          <div className={classes.paper}>\n            <h2 id=\"modalPrivacy\">Privacy Policy</h2>\n            {privacy}\n          </div>\n        </Fade>\n      </Modal>\n      <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/Ojself\">\n      <GitHubIcon color=\"action\"/>\n      </a>\n    </div>\n  )\n}\n\n","import React from 'react'\nimport { defaultColors } from '../placeholderDefaults';\nimport html2canvas from 'html2canvas';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport RoomIcon from '@material-ui/icons/Room';\nimport HomeIcon from '@material-ui/icons/Home';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst greyShades = {\n    \"#FF9908\": \"#FED697\",\n    \"#FFBA00\": \"#FFE28F\",\n    \"#DD5F5F\": \"#E78F8E\",\n    \"#8ABDB0\": \"#D0E3DF\",\n    \"#06A3CB\": \"#A3D8EB\",\n    \"#9EC41C\": \"#D8E7A4\",\n\n}\n\n\nexport default function JodelView(props) {\n  const classes = useStyles();\n  const {options} = props\n\n  const backgroundColor = defaultColors[options.backgroundColor]\n  const greyColor = greyShades[backgroundColor]\n\n  const styles = {\n    jodelWrapper:{\n      display:'flex',\n      flexDirection: 'column',\n      alignItems:'Center',\n      height: '100%',\n      width:'35%',\n      marginRight: \"20%\"\n    },\n    jodelHeader:{\n      textAlign:'center'\n    },\n    jodelPreview:{\n      display:'flex',\n      justifyContent: 'center',\n      flexDirection:'column',\n      minHeight: '200px',\n      height: '200px',\n      minWidth:'250px',\n      width: '250px',\n      position: 'relative',\n      padding: '10%',\n      backgroundColor: backgroundColor,\n    },\n    jodelText:{\n    whiteSpace: 'pre-line',\n    color: 'white',\n    },\n    likesText:{\n      position: 'absolute',\n      bottom: '0',\n      right: '5%',\n      color:'white'\n    },\n    jodelHashTags:{\n      position: 'absolute',\n      bottom: '5%',\n      color:'white',\n      fontWeight: 'bold'\n    },\n    likesNumber:{\n      position: 'absolute',\n      bottom: '0',\n      right: '5%',\n      color:'white',\n      fontSize: '2em'\n    },\n    topInfo:{\n    },\n    location:{\n      fontSize: '0.75em',\n      color:greyColor\n    },\n    channel:{\n      fontSize: '0.9em',\n      color: 'white',\n      fontWeight: 'bold'\n    },\n    dot: {\n      color: greyColor\n      },\n    duration:{\n      fontSize: '0.75em',\n      color: greyColor\n      }\n\n  }\n\n  const handleDownload = ()=> {\n    html2canvas(document.querySelector('#jodelView')).then((canvas)=> {\n      let link = document.createElement('a');\n      link.download = 'jodel.png';\n      link.href = canvas.toDataURL()\n      link.click();\n    });\n  }\n\n\nconst locationIcon = options.housePinIcon === 'house' ? <HomeIcon fontSize=\"small\" color=\"action\"/> : <RoomIcon fontSize=\"small\" color=\"action\"/>\n\n\n  return (\n    <div style={styles.jodelWrapper}>\n    <h1 style={styles.jodelHeader}> Live preview</h1>\n    <div id='jodelView' style={styles.jodelPreview}>\n      {options.view === 'detailed' && <div style={styles.topInfo}>\n          <span >{locationIcon}</span>\n          <span style={styles.location}>{options.location}</span>\n          <span style={styles.channel}>{` @${options.channel}`}</span>\n          <span style={styles.dot}> &#183; </span>\n          <span style={styles.duration}>{options.duration}{options.durationLabel} ago</span>\n      </div>\n      }\n      <p style={styles.jodelText}>{options.textInput}</p>\n      <p style={styles.jodelHashTags}>{options.hashTags}</p>\n      {options.showLikes && <p style={styles.likesNumber}>{options.likes}</p>}\n      {options.showLikes && <p style={styles.likesText}>likes</p>}\n    </div>\n    <div className={classes.root}>\n      <Button\n      onClick={handleDownload}\n      variant='contained'\n      color='primary'\n      startIcon={<GetAppIcon />}\n>\n        Download\n      </Button>\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport RadioButtons from \"./organism/RadioButtons\";\nimport TextInputField from \"./organism/TextInputField\";\nimport CheckBoxAndLikesField from \"./organism/CheckBoxAndLikesField\";\nimport HashTagInputField from \"./organism/HashTagInputField\";\nimport HousePinRadio from \"./organism/HousePinRadio\";\nimport LocationInputField from \"./organism/LocationInputField\";\nimport DurationInputField from \"./organism/DurationInputField\";\nimport ButtonViewGroup from \"./organism/ButtonViewGroup\";\nimport ChannelInputField from \"./organism/ChannelInputField\";\nimport Footer from \"./Footer\";\nimport {\n  defaultColors,\n  defaultQuotes,\n  defaultLocations,\n  defaultChannels,\n} from \"../placeholderDefaults\";\n\nimport JodelView from \"./JodelView\";\n\nconst randomDefaultColor = Object.keys(defaultColors)[\n  Math.floor(Math.random() * Object.keys(defaultColors).length)\n];\n\nconst randomDefaultText =\n  defaultQuotes[Math.floor(Math.random() * defaultQuotes.length)];\n\nexport default function MainWrapper(props) {\n  const [state, setState] = useState({\n    message: null,\n    view: \"clean\",\n    textInput: randomDefaultText,\n    backgroundColor: randomDefaultColor,\n    showLikes: false,\n    likes: \"0\",\n    hashTags: \"\",\n    durationLabel: \"min\",\n    duration: 1,\n    housePinIcon: \"house\",\n    channel: \"\",\n    location: \"\",\n  });\n\n  useEffect(() => {}, [state]);\n\n  const detailedView = state.view === \"detailed\";\n\n  const handleChange = (prop) => (event) => {\n    console.log(prop, event.target.value);\n    const value =\n      prop === \"showLikes\" ? event.target.checked : event.target.value;\n    if (prop === \"view\" && !state.channel) {\n      setState({\n        ...state,\n        showLikes: true,\n        likes:\n          state.likes === \"0\" ? Math.floor(Math.random() * 1000) : state.likes,\n        location:\n          defaultLocations[Math.floor(Math.random() * defaultLocations.length)],\n        channel:\n          defaultChannels[Math.floor(Math.random() * defaultChannels.length)],\n        [prop]: value,\n      });\n    } else {\n      setState({ ...state, [prop]: value });\n    }\n  };\n  return (\n    <div className=\"mainWrapper\">\n      <ButtonViewGroup likes={state.likes} handleChange={handleChange} />\n      <div className=\"subWrapper\">\n        <div className=\"settings\">\n          <RadioButtons\n            backgroundColor={state.backgroundColor}\n            handleChange={handleChange}\n          />\n          <TextInputField\n            textInput={state.textInput}\n            handleChange={handleChange}\n          />\n          <CheckBoxAndLikesField\n            showLikes={state.showLikes}\n            likes={state.likes}\n            handleChange={handleChange}\n          />\n          {detailedView && (\n            <HashTagInputField\n              hashTags={state.hashTags}\n              handleChange={handleChange}\n            />\n          )}\n          {detailedView && (\n            <LocationInputField\n              location={state.location}\n              handleChange={handleChange}\n            />\n          )}\n          {detailedView && (\n            <HousePinRadio\n              housePinIcon={state.housePinIcon}\n              handleChange={handleChange}\n            />\n          )}\n          {detailedView && (\n            <DurationInputField\n              durationLabel={state.durationLabel}\n              duration={state.duration}\n              handleChange={handleChange}\n            />\n          )}\n          {detailedView && (\n            <ChannelInputField\n              channel={state.channel}\n              handleChange={handleChange}\n            />\n          )}\n        </div>\n        <JodelView options={state} />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n","import React from 'react';\nimport MainWrapper from './components/MainWrapper'\n\nfunction App() {\n  console.error(\"Are you hiring? 🙃\")\n  return (\n      < MainWrapper />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}